<!-- views/main.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Connectify</title>
    <link rel="stylesheet" href="/css/new.css"> <!-- Add a custom stylesheet -->
    <link href="https://fonts.googleapis.com/css2?family=Billabong&display=swap" rel="stylesheet">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Playwrite+DE+Grund:wght@100..400&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"> <!-- Updated Font Awesome CDN -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    

      

</head>
<body>
    <div class="container">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div>
                <div class="logo">
                    <h1>Connectify</h1>
                </div>
                <nav class="menu">
                    <ul>
                        <li class="menu-item">
                            <a href="/users/<%= user._id %>">
                                <img src="<%= user.profile_pic %>" alt="<%= user.username %>'s profile picture" class="small-profile-pic">
                                <div>
                                    <span class="full-name"><%= user.full_name %></span>
                                    <span class="username"><%= user.username %></span>
                                </div>
                            </a>
                        </li>
                        

                        <li class="menu-item active"><i class="bi bi-house-door"></i> Home</li>
                        <li class="menu-item"><i class="bi bi-search"></i> Search Users</li>
                        <li class="menu-item"><i class="bi bi-envelope"></i> Inbox Messages</li>
                        <li class="menu-item"><i class="bi bi-plus-square"></i> Create Post</li>
                        <li class="menu-item"><i class="bi bi-bookmark"></i> Saved Items</li>
                        <li class="menu-item"><i class="bi bi-grid"></i> My Posts</li>
                        <li class="menu-item"><i class="bi bi-person-circle"></i> Edit Profile</li>
                        
                        


                    </ul>
                </nav>
            </div>
            <div class="logout">
                <a href="/logout"><i class="bi bi-box-arrow-right"></i> Logout</a>

            </div>
        </aside>

        

        <!-- Main content area -->
        <main class="main-content">










            <h1>Edit Post</h1>

            <form action="/posts/edit/<%= post._id %>" method="POST" enctype="multipart/form-data">
                <!-- Media Preview -->
                <div>
                    <label>Current Media:</label>
                    <img src="<%= post.media %>" alt="Current Media" width="200">
                </div>
        
                <!-- Option to upload a new media file -->
                <div>
                    <label for="media">Change Media:</label>
                    <input type="file" name="media" id="media">
                </div>
        
                <!-- Caption -->
                <div>
                    <label for="caption">Caption:</label>
                    <input type="text" name="caption" id="caption" value="<%= post.caption %>">
                </div>
        
                <!-- Location -->
                <div>
                    <label for="location">Location:</label>
                    <input type="text" name="location" id="location" value="<%= post.location %>">
                </div>
        
                <!-- Hashtags -->
                <div>
                    <label for="hashtags">Hashtags (comma separated):</label>
                    <input type="text" name="hashtags" id="hashtags" value="<%= post.hashtags.join(', ') %>">
                </div>
        
                <!-- Tagged Users -->
                <div>
                    <label for="taggedUsers">Tagged Users (comma separated):</label>
                    <input type="text" name="taggedUsers" id="taggedUsers" value="<%= post.taggedUsers.map(user => user.username).join(', ') %>">
                </div>
        
                <button type="submit">Update Post</button>
            </form>


























        
        </main>
    </div>



   

   

    <!-- Navigation handling -->
    <script>
        var initialView = "<%= view %>";
        document.querySelectorAll('.menu-item').forEach(item => {
            item.addEventListener('click', function() {
                document.querySelector('.menu-item.active').classList.remove('active');
                this.classList.add('active');

                document.querySelectorAll('section').forEach(section => {
                    section.classList.add('hidden');
                });

                const targetSection = this.textContent.trim().toLowerCase().replace(" ", "-");
                document.getElementById(targetSection).classList.remove('hidden');
            });
        });

        // Show the section based on the initial view
        if (initialView === 'my-posts') {
            document.getElementById('my-posts').classList.remove('hidden');
            document.querySelectorAll('.menu-item').forEach(item => {
                if (item.textContent.trim().toLowerCase() === 'my posts') {
                    item.classList.add('active');
                } else {
                    item.classList.remove('active');
                }
            });
        }
    </script>





<script>
    document.querySelectorAll('.like-icon').forEach(icon => {
        icon.addEventListener('click', function() {
            const postId = this.getAttribute('data-post-id');
            const isLiked = this.classList.contains('fa-heart');

            fetch(`/posts/${isLiked ? 'unlike' : 'like'}/${postId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer <%= token %>` // Include your JWT token here
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Toggle the like icon class
                    if (isLiked) {
                        this.classList.remove('fa-heart'); // Remove filled heart
                        this.classList.add('fa-heart-o');  // Add empty heart
                    } else {
                        this.classList.remove('fa-heart-o'); // Remove empty heart
                        this.classList.add('fa-heart');      // Add filled heart
                    }

                    // Update the like count
                    const likeCountElem = this.nextElementSibling;
                    let likeCount = parseInt(likeCountElem.textContent);
                    likeCountElem.textContent = isLiked ? likeCount - 1 : likeCount + 1;
                } else {
                    alert('Failed to update like status');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });
    });
</script>



<script>
    document.querySelectorAll('.comment-icon').forEach(icon => {
        icon.addEventListener('click', function() {
            const postId = this.getAttribute('data-post-id');
            const commentsSection = document.getElementById(`comments-${postId}`);
            commentsSection.classList.toggle('hidden');
        });
    });
</script>













<script>
    document.querySelectorAll('.save-icon').forEach(icon => {
    icon.addEventListener('click', function() {
        const postId = this.getAttribute('data-post-id');
        const isSaved = this.getAttribute('data-saved') === 'true';

        fetch(`/posts/${isSaved ? 'unsave' : 'save'}/${postId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer <%= token %>` // Include your JWT token here
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Toggle the save icon and its color
                this.setAttribute('data-saved', isSaved ? 'false' : 'true');
                this.style.color = isSaved ? '' : 'blue';
            }
        })
        .catch(error => console.error('Error:', error));
    });
});

</script>













<!-- AJAX search functionality -->
<script>
    document.getElementById('search-form').addEventListener('submit', function(e) {
        e.preventDefault();

        const query = document.getElementById('search-query').value;

        fetch(`/users/search?query=${query}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer <%= token %>` // Include your JWT token here
            }
        })
        .then(response => response.json())
        .then(data => {
            const resultsList = document.getElementById('search-results');
            resultsList.innerHTML = '';

            if (data.length > 0) {
                data.forEach(user => {
                    const listItem = document.createElement('li');
                    listItem.innerHTML = `
                        <a href="/users/${user._id}">
                            <img src="${user.profile_pic}" alt="${user.username}'s profile picture" class="small-profile-pic">
                            <span>${user.full_name} (@${user.username})</span>
                        </a>
                    `;
                    resultsList.appendChild(listItem);
                });
            } else {
                resultsList.innerHTML = '<li>No users found.</li>';
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    });
</script>






</body>
</html>

